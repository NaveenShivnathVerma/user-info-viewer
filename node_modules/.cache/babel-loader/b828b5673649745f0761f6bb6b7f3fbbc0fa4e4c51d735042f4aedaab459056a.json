{"ast":null,"code":"import React from'react';import{useGetUsersQuery}from'./userApiSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserList=()=>{const{data:users,error,isLoading}=useGetUsersQuery();if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading users...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{children:\"Error loading users.\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User List\"}),/*#__PURE__*/_jsx(\"ul\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:user.name}),\" - \",user.email]},user.id))})]});};export default UserList;","map":{"version":3,"names":["React","useGetUsersQuery","jsx","_jsx","jsxs","_jsxs","UserList","data","users","error","isLoading","children","map","user","name","email","id"],"sources":["C:/Users/DELL/user-info-viewer/src/features/users/UserList.jsx"],"sourcesContent":["import React from 'react';\nimport { useGetUsersQuery } from './userApiSlice';\n\nconst UserList = () => {\n  const { data: users, error, isLoading } = useGetUsersQuery();\n\n  if (isLoading) return <p>Loading users...</p>;\n  if (error) return <p>Error loading users.</p>;\n\n  return (\n    <div>\n      <h2>User List</h2>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            <strong>{user.name}</strong> - {user.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAEC,SAAU,CAAC,CAAGT,gBAAgB,CAAC,CAAC,CAE5D,GAAIS,SAAS,CAAE,mBAAOP,IAAA,MAAAQ,QAAA,CAAG,kBAAgB,CAAG,CAAC,CAC7C,GAAIF,KAAK,CAAE,mBAAON,IAAA,MAAAQ,QAAA,CAAG,sBAAoB,CAAG,CAAC,CAE7C,mBACEN,KAAA,QAAAM,QAAA,eACER,IAAA,OAAAQ,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBR,IAAA,OAAAQ,QAAA,CACGH,KAAK,CAACI,GAAG,CAAEC,IAAI,eACdR,KAAA,OAAAM,QAAA,eACER,IAAA,WAAAQ,QAAA,CAASE,IAAI,CAACC,IAAI,CAAS,CAAC,MAAG,CAACD,IAAI,CAACE,KAAK,GADnCF,IAAI,CAACG,EAEV,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}